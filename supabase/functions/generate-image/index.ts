
import { serve } from "https://deno.land/std@0.168.0/http/server.ts"
import Replicate from "https://esm.sh/replicate@0.25.2"

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

serve(async (req) => {
  // Handle CORS preflight requests
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const REPLICATE_API_KEY = Deno.env.get('REPLICATE_API_KEY')
    if (!REPLICATE_API_KEY) {
      throw new Error('REPLICATE_API_KEY is not set')
    }

    const replicate = new Replicate({
      auth: REPLICATE_API_KEY,
    })

    const body = await req.json()

    // Check if request is complete with required fields
    if (!body.prompt || !body.model) {
      return new Response(
        JSON.stringify({ 
          error: "Missing required fields: prompt and model are required" 
        }), {
          headers: { ...corsHeaders, 'Content-Type': 'application/json' },
          status: 400,
        }
      )
    }

    console.log(`Generating image with model: ${body.model}, prompt: ${body.prompt}`)

    let modelId
    let modelConfig

    // Use the Flux model directly as it's more reliable
    modelId = "stability-ai/sdxl:39ed52f2a78e934b3ba6e2a89f5b1c712de7dfea535525255b1aa35c5565e08b"
    
    if (body.model === "flux") {
      modelId = "stability-ai/sdxl:39ed52f2a78e934b3ba6e2a89f5b1c712de7dfea535525255b1aa35c5565e08b"
      modelConfig = {
        prompt: body.prompt,
        width: 1024,
        height: 1024,
        num_outputs: 1,
        num_inference_steps: 25,
      }
    } else if (body.model === "sdxl-turbo") {
      modelId = "stability-ai/sdxl:39ed52f2a78e934b3ba6e2a89f5b1c712de7dfea535525255b1aa35c5565e08b"
      modelConfig = {
        prompt: body.prompt,
        width: 1024,
        height: 1024,
        num_outputs: 1,
        num_inference_steps: 25,
      }
    } else {
      // Default to SDXL for any other model or if the model is not specified
      modelId = "stability-ai/sdxl:39ed52f2a78e934b3ba6e2a89f5b1c712de7dfea535525255b1aa35c5565e08b"
      modelConfig = {
        prompt: body.prompt,
        width: 1024,
        height: 1024,
        num_outputs: 1,
        num_inference_steps: 25,
      }
    }

    // Run the model with better error handling
    try {
      console.log("Starting generation with model:", modelId);
      const output = await replicate.run(modelId, {
        input: modelConfig
      });

      console.log("Generation response:", output);
      
      if (!output || (Array.isArray(output) && output.length === 0)) {
        throw new Error("No output was generated by the model");
      }

      return new Response(JSON.stringify({ output }), {
        headers: { ...corsHeaders, 'Content-Type': 'application/json' },
        status: 200,
      });
    } catch (modelError) {
      console.error("Model error:", modelError);
      throw new Error(`Error generating image: ${modelError.message}`);
    }
  } catch (error) {
    console.error("Error in generate-image function:", error);
    
    return new Response(JSON.stringify({ 
      error: error.message || "An unknown error occurred"
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      status: 500,
    });
  }
})
